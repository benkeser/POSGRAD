missingsample <- subset(POSGRADdata_merge, is.na(POSGRADdata_merge$rs174602_o_num) & is.na(POSGRADdata_merge$VPC))
View(POSGRADdata_merge)
View(POSGRADdata_merge_analytic)
write.csv(POSGRADdata_merge,"derived_data/POSGRADdata_merge.csv")
write.csv(POSGRADdata_merge,"2_POSGRAD Analysis/derived_data/POSGRADdata_merge.csv")
#Setting filepaths
offspringfadslocation<-here::here("raw_data/posgrad_offspring_cleaned_genetic_data.csv")
cognitivelocation<-here::here("raw_data/ja.csv")
breastfeedinglocation<-here::here("raw_data/breastfeeding.csv")
SESHomelocation<-here::here("raw_data/Ses_home.csv")
#Reading in data
offspringfadsdata<-read.csv(offspringfadslocation,header = TRUE)
cognitivedata<-read.csv(cognitivelocation,header=TRUE)
breastfeedingdata<-read.csv(breastfeedinglocation, header=TRUE)
SESHOMEdata<-read.csv(SESHomelocation,header=TRUE)
library(dplyr)
#Checking variable types
class(offspringfadsdata$folio)
class(cognitivedata$folio)
class(breastfeedingdata$foliof)
class(SESHOMEdata$folio_mom)
#Change folio to integer in offspringfadsdata and check
offspringfadsdata$folio<- as.integer(as.character(offspringfadsdata$folio))
class(offspringfadsdata$folio)
#Merge data
builddata1<- merge(cognitivedata,offspringfadsdata,by = "folio", all.x = TRUE)
builddata2<-merge(builddata1,breastfeedingdata, by.x = "folio", by.y = "foliof", all.x = TRUE)
builddata3 <-merge(builddata2,SESHOMEdata, by.x = "folior", by.y = "folio_mom", all.x = TRUE)
POSGRADdata_merge<-builddata3
library(ggplot2)
#Create analytic sample
POSGRADdata_merge$analytic= ifelse(POSGRADdata_merge$VPC>=0 & POSGRADdata_merge$rs174602_o_num>=0,1,0)
#We have genetic data for 621 children
table(POSGRADdata_merge$rs174602_o_num>=0)
#Of those 621, 125 are missing VPC score data (621-496), but I do not know how to cross check this because the
POSGRADdata_merge$havers174602=ifelse(POSGRADdata_merge$rs174602_o_num>=0,1,0)
POSGRADdata_merge$haveVPC=ifelse(POSGRADdata_merge$VPC>=0,1,0)
#Missing sample has 195, not quite right
missingsample <- subset(POSGRADdata_merge, is.na(POSGRADdata_merge$rs174602_o_num) & is.na(POSGRADdata_merge$VPC))
#Analytic sample is 496. Need to fix the fact that "Analytic" variable is currently coded as 1,NA rather than 1,0.
#Analytic data only
POSGRADdata_merge_analytic<-subset(POSGRADdata_merge, analytic==1)
write.csv(POSGRADdata_merge,"derived_data/POSGRADdata_merge.csv")
write.csv(POSGRADdata_merge,"~/derived_data/POSGRADdata_merge.csv")
write.csv(POSGRADdata_merge,file="derived_data/POSGRADdata_merge.csv")
write.csv(POSGRADdata_merge,file="POSGRADdata_merge.csv")
write.csv(POSGRADdata_merge,file="POSGRADdata_merge.csv")
write.csv(POSGRADdata_merge,file=here::here("derived_data/POSGRAD_merge.csv"))
#Save POSGRAD Merged data as CSV
write.csv(POSGRADdata_merge,file=here::here("derived_data/POSGRADdata_merge.csv"))
#Save POSGRAD Analytic data as CSV
write.csv(POSGRADdata_merge_analytic,file=here::here("derived_data/POSGRADdata_merge_analytic.csv"))
#Set filepaths
POSGRADanalytic<-here::here("derived_data/posgrad_merge_analytic.csv")
#Set filepaths
POSGRADanalyticlocation<-here::here("derived_data/posgrad_merge_analytic.csv")
#Read in data
POSGRADanalytic<-read.csv(POSGRADanalyticlocation,header = TRUE)
#Set filepaths
POSGRADanalyticlocation<-here::here("derived_data/posgrad_merge_analytic.csv")
#Read in data
POSGRADanalytic<-read.csv(POSGRADanalyticlocation,header = TRUE)
#Set filepaths
POSGRADanalyticlocation<-here::here("derived_data/POSGRADdata_merge_analytic.csv")
#Read in data
POSGRADanalytic<-read.csv(POSGRADanalyticlocation,header = TRUE)
#Set filepaths
POSGRADanalyticlocation<-here::here("derived_data/POSGRADdata_merge_analytic.csv")
#Read in data
POSGRADanalytic<-read.csv(POSGRADanalyticlocation,header = TRUE)
#Build table
table(POSGRADanalytic$rs174602_o_num)
#Build table
table(POSGRADanalytic$rs174602_o_num, POSGRADanalytic$rs1000778_o_num)
ggplot(data=POSGRADanalytic, aes(x=rs174602_o_num))+
geom_bar()
ggplot::ggplot(data=POSGRADanalytic, aes(x=rs174602_o_num))+
geom_bar()
ggplot2::ggplot(data=POSGRADanalytic, aes(x=rs174602_o_num))+
geom_bar()
ggplot2::ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar()
#Set filepaths
POSGRADanalyticlocation<-here::here("derived_data/POSGRADdata_merge_analytic.csv")
#Read in data
POSGRADanalytic<-read.csv(POSGRADanalyticlocation,header = TRUE)
ggplot2::ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar()
View(POSGRADanalytic)
View(POSGRADanalytic)
#Set filepaths
POSGRADanalyticlocation<-here::here("derived_data/POSGRADdata_merge_analytic.csv")
#Read in data
POSGRADanalytic<-read.csv(POSGRADanalyticlocation,header = TRUE)
ggplot2::ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar()
#Visually Examine Allele Frequencies by SNP
library(ggplot2)
ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar()
ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar()+
scale_x_discrete(labesl=c("Homozygote Major", "Heterozygote Major", "Homozygote Minor"))
ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar()+
scale_x_discrete(labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))
ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar()+
scale_x_discrete(labels=c(0="Homozygote Major",1= "Heterozygote Major",2="Homozygote Minor"))
ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar(aes(factor(rs174602_o_num)))+
scale_x_discrete(labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))
ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar(aes(factor(rs174602_o_num)))+
scale_x_discrete(name="SNP 174602", labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))
ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar(aes(factor(rs174602_o_num)))+
scale_x_discrete(name="SNP 174602", labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))+
ggtitle("SNP 174602 Allele Frequency ")
kable(POSGRADanalytic %>%
group_by(rs174602_o_num) %>%
summarise(n=n())%>%
mutate(freq=n/sum(n)))
library(knitr)
#rs174602
ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar(aes(factor(rs174602_o_num)))+
scale_x_discrete(name="SNP 174602", labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))+
ggtitle("SNP 174602 Allele Frequency ")
kable(POSGRADanalytic %>%
group_by(rs174602_o_num) %>%
summarise(n=n())%>%
mutate(freq=n/sum(n)))
library(knitr)
kable(POSGRADanalytic %>%
group_by(rs174602_o_num) %>%
summarise(n=n())%>%
mutate(freq=n/sum(n)))
group_by(rs174602_o_num)
kable(POSGRADanalytic%>%
group_by(rs174602_o_num)%>%
summarise(n=n())%>%
mutate(freq=n/sum(n)))
library(dplyr)
kable(POSGRADanalytic%>%
group_by(rs174602_o_num)%>%
summarise(n=n())%>%
mutate(freq=n/sum(n)))
#rs174602
ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar(aes(factor(rs174602_o_num)))+
scale_x_discrete(name="SNP 174602", labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))+
ggtitle("FADS 2 SNP 174602 Allele Frequency ")
#rs174556
ggplot(data=POSGRADanalytic,aes(x=rs174556_o_num))+
geom_bar(aes(factor(rs174556_o_num)))+
scale_x_discrete(name="SNP 174556", labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))+
ggtitle("FADS 1 SNP 174556 Allele Frequency ")
View(POSGRADanalytic)
View(POSGRADanalytic)
#rs1535
ggplot(data=POSGRADanalytic,aes(x=rs1535_o_num))+
geom_bar(aes(factor(rs1535_o_num)))+
scale_x_discrete(name="SNP 1535", labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))+
ggtitle("FADS 2 SNP 1535Allele Frequency ")
kable(POSGRADanalytic%>%
group_by(rs1535_o_num)%>%
summarise(n=n())%>%
mutate(freq=n/sum(n)))
#rs174448
ggplot(data=POSGRADanalytic,aes(x=rs174448_o_num))+
geom_bar(aes(factor(rs174448_o_num)))+
scale_x_discrete(name="SNP rs174448", labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))+
ggtitle("FADS 2 SNP rs174448Allele Frequency ")
kable(POSGRADanalytic%>%
group_by(rs174448_o_num)%>%
summarise(n=n())%>%
mutate(freq=n/sum(n)))
#rs174583
ggplot(data=POSGRADanalytic,aes(x=rs174583_o_num))+
geom_bar(aes(factor(rs174583_o_num)))+
scale_x_discrete(name="SNP rs174583", labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))+
ggtitle("FADS 2 SNP rs174583 Allele Frequency ")
kable(POSGRADanalytic%>%
group_by(rs174583_o_num)%>%
summarise(n=n())%>%
mutate(freq=n/sum(n)))
library(knitr)
library(ggplot2)
library(dplyr)
library(knitr)
View(POSGRADanalytic)
View(POSGRADanalytic)
#Verbal
ggplot(POSGRADanalytic,aes(x=V))+
geom_histogram(bins=50, fill="#69b3a2", color="#69b3a2")+
ggtitle("Distribution of McCarthy Verbal Scores")+
xlab("McCarthy Verbal Score")
summary(POSGRADanalytic$V)
#Perceptual
ggplot(POSGRADanalytic,aes(x=P))+
geom_histogram(bins=50, fill="#69b3a2", color="#69b3a2")+
ggtitle("Distribution of McCarthy Perceptual Scores")+
xlab("McCarthy Perceptual Score")
summary(POSGRADanalytic$P)
#Quantitative
ggplot(POSGRADanalytic,aes(x=C))+
geom_histogram(bins=50, fill="#69b3a2", color="#69b3a2")+
ggtitle("Distribution of McCarthy Quantitative Scores")+
xlab("McCarthy Quantitative Score")
summary(POSGRADanalytic$C)
#Composite (Verbal, Perceptive, Quantitative)
ggplot(POSGRADanalytic,aes(x=VPC))+
geom_histogram(bins=50, fill="#69b3a2", color="#69b3a2")+
ggtitle("Distribution of McCarthy Composite Scores")+
xlab("McCarthy Composite Score")
summary(POSGRADanalytic$VPC)
#Memory
ggplot(POSGRADanalytic,aes(x=mem))+
geom_histogram(bins=50, fill="#69b3a2", color="#69b3a2")+
ggtitle("Distribution of McCarthy Memory Scores")+
xlab("McCarthy Raw Memory Score")
#Memory
ggplot(POSGRADanalytic,aes(x=mem))+
geom_histogram(bins=50, fill="#69b3a2", color="#69b3a2")+
ggtitle("Distribution of McCarthy Memory Scores")+
xlab("McCarthy Raw Memory Score")
summary(POSGRADanalytic$Mem)
#Memory
ggplot(POSGRADanalytic,aes(x=Mem))+
geom_histogram(bins=50, fill="#69b3a2", color="#69b3a2")+
ggtitle("Distribution of McCarthy Memory Scores")+
xlab("McCarthy Raw Memory Score")
#Motor
ggplot(POSGRADanalytic,aes(x=Mot))+
geom_histogram(bins=50, fill="#69b3a2", color="#69b3a2")+
ggtitle("Distribution of McCarthy Memory Scores")+
xlab("McCarthy Raw Memory Score")
summary(POSGRADanalytic$Mot)
here::i_am("code/03_render_report.R")
rmarkdown::render(here::here("POSGRADreport.Rmd"))
## Report
To build, run makefile. Report generates tables and figures allele frequencies and child cognitive development score distributions.
```{r}
library(ggplot2)
#Setting filepaths
offspringfadslocation<-here::here("raw_data/posgrad_offspring_cleaned_genetic_data.csv")
cognitivelocation<-here::here("raw_data/ja.csv")
breastfeedinglocation<-here::here("raw_data/breastfeeding.csv")
library(dplyr)
library(ggplot2)
#Setting filepaths
offspringfadslocation<-here::here("raw_data/posgrad_offspring_cleaned_genetic_data.csv")
cognitivelocation<-here::here("raw_data/ja.csv")
breastfeedinglocation<-here::here("raw_data/breastfeeding.csv")
SESHomelocation<-here::here("raw_data/Ses_home.csv")
#Reading in data
offspringfadsdata<-read.csv(offspringfadslocation,header = TRUE)
cognitivedata<-read.csv(cognitivelocation,header=TRUE)
breastfeedingdata<-read.csv(breastfeedinglocation, header=TRUE)
SESHOMEdata<-read.csv(SESHomelocation,header=TRUE)
#Checking variable types
class(offspringfadsdata$folio)
class(cognitivedata$folio)
class(breastfeedingdata$foliof)
class(SESHOMEdata$folio_mom)
#Change folio to integer in offspringfadsdata and check
offspringfadsdata$folio<- as.integer(as.character(offspringfadsdata$folio))
class(offspringfadsdata$folio)
#Merge data
builddata1<- merge(cognitivedata,offspringfadsdata,by = "folio", all.x = TRUE)
builddata2<-merge(builddata1,breastfeedingdata, by.x = "folio", by.y = "foliof", all.x = TRUE)
builddata3 <-merge(builddata2,SESHOMEdata, by.x = "folior", by.y = "folio_mom", all.x = TRUE)
POSGRADdata_merge<-builddata3
#Create analytic sample
POSGRADdata_merge$analytic= ifelse(POSGRADdata_merge$VPC>=0 & POSGRADdata_merge$rs174602_o_num>=0,1,0)
#We have genetic data for 621 children
table(POSGRADdata_merge$rs174602_o_num>=0)
#Of those 621, 125 are missing VPC score data (621-496), but I do not know how to cross check this because the
POSGRADdata_merge$havers174602=ifelse(POSGRADdata_merge$rs174602_o_num>=0,1,0)
POSGRADdata_merge$haveVPC=ifelse(POSGRADdata_merge$VPC>=0,1,0)
#Missing sample has 195, not quite right
missingsample <- subset(POSGRADdata_merge, is.na(POSGRADdata_merge$rs174602_o_num) & is.na(POSGRADdata_merge$VPC))
#Analytic sample is 496. Need to fix the fact that "Analytic" variable is currently coded as 1,NA rather than 1,0.
#Analytic data only
POSGRADdata_merge_analytic<-subset(POSGRADdata_merge, analytic==1)
#Save POSGRAD Merged data as CSV
write.csv(POSGRADdata_merge,file=here::here("derived_data/POSGRADdata_merge.csv"))
#Save POSGRAD Analytic data as CSV
write.csv(POSGRADdata_merge_analytic,file=here::here("derived_data/POSGRADdata_merge_analytic.csv"))
here::i_am("code/renderreport.r")
rmarkdown::render(here::here("code/allelefreqbySNP.Rmd"))
rmarkdown::render(here::here("code/McCarthybySNP.Rmd"))
rmarkdown::render(here::here("code/McCarthybySNP.Rmd"))
library(dplyr)
library(ggplot2)
offspringfadslocation<-here::here("raw_data/posgrad_offspring_cleaned_genetic_data.csv")
cognitivelocation<-here::here("raw_data/ja.csv")
breastfeedinglocation<-here::here("raw_data/breastfeeding.csv")
SESHomelocation<-here::here("raw_data/Ses_home.csv")
offspringfadsdata<-read.csv(offspringfadslocation,header = TRUE)
cognitivedata<-read.csv(cognitivelocation,header=TRUE)
breastfeedingdata<-read.csv(breastfeedinglocation, header=TRUE)
SESHOMEdata<-read.csv(SESHomelocation,header=TRUE)
#Checking variable types
class(offspringfadsdata$folio)
class(cognitivedata$folio)
class(breastfeedingdata$foliof)
class(SESHOMEdata$folio_mom)
offspringfadsdata$folio<- as.integer(as.character(offspringfadsdata$folio))
library(dplyr)
library(ggplot2)
#Setting filepaths
offspringfadslocation<-here::here("raw_data/posgrad_offspring_cleaned_genetic_data.csv")
cognitivelocation<-here::here("raw_data/ja.csv")
breastfeedinglocation<-here::here("raw_data/breastfeeding.csv")
SESHomelocation<-here::here("raw_data/Ses_home.csv")
#Reading in data
offspringfadsdata<-read.csv(offspringfadslocation,header = TRUE)
cognitivedata<-read.csv(cognitivelocation,header=TRUE)
breastfeedingdata<-read.csv(breastfeedinglocation, header=TRUE)
SESHOMEdata<-read.csv(SESHomelocation,header=TRUE)
#Checking variable types
class(offspringfadsdata$folio)
class(cognitivedata$folio)
class(breastfeedingdata$foliof)
class(SESHOMEdata$folio_mom)
#Change folio to integer in offspringfadsdata and check
offspringfadsdata$folio<- as.integer(as.character(offspringfadsdata$folio))
View(offspringfadsdata)
View(offspringfadsdata)
#Merge data
builddata1<- merge(cognitivedata,offspringfadsdata,by = "folio", all.x = TRUE)
builddata2<-merge(builddata1,breastfeedingdata, by.x = "folio", by.y = "foliof", all.x = TRUE)
builddata3 <-merge(builddata2,SESHOMEdata, by.x = "folior", by.y = "folio_mom", all.x = TRUE)
POSGRADdata_merge<-builddata3
View(POSGRADdata_merge)
View(POSGRADdata_merge)
#Create analytic sample
POSGRADdata_merge$analytic= ifelse(POSGRADdata_merge$VPC>=0 & POSGRADdata_merge$rs174602_o_num>=0,1,0)
#We have genetic data for 621 children
table(POSGRADdata_merge$rs174602_o_num>=0)
#Of those 621, 125 are missing VPC score data (621-496), but I do not know how to cross check
POSGRADdata_merge$havers174602=ifelse(POSGRADdata_merge$rs174602_o_num>=0,1,0)
POSGRADdata_merge$haveVPC=ifelse(POSGRADdata_merge$VPC>=0,1,0)
#Missing sample has 195, not quite right
missingsample <- subset(POSGRADdata_merge, is.na(POSGRADdata_merge$rs174602_o_num) & is.na(POSGRADdata_merge$VPC))
#Analytic data only
POSGRADdata_merge_analytic<-subset(POSGRADdata_merge, analytic==1)
#Set filepaths
POSGRADanalyticlocation<-here::here("derived_data/POSGRADdata_merge_analytic.csv")
#Read in data
POSGRADanalytic<-read.csv(POSGRADanalyticlocation,header = TRUE)
saveRDS(figure_174602,here::here("output/figure_174602.rds"))
#Examine Allele Frequencies by SNP
library(ggplot2)
#Examine Allele Frequencies by SNP
library(ggplot2)
library(knitr)
library(dplyr)
#rs174602
figure_174602<- ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar(aes(factor(rs174602_o_num)))+
scale_x_discrete(name="SNP rs174602", labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))+
ggtitle("FADS 2 SNP rs174602 Allele Frequency ")
saveRDS(figure_174602,here::here("output/figure_174602.rds"))
#rs1535
figure_1535<- ggplot(data=POSGRADanalytic,aes(x=rs1535_o_num))+
geom_bar(aes(factor(rs1535_o_num)))+
scale_x_discrete(name="SNP rs1535", labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))+
ggtitle("FADS 2 SNP rs1535 Allele Frequency ")
saveRDS(figure_1535,here::here("output/figure_1535.rds"))
#Set filepaths
POSGRADanalyticlocation<-here::here("derived_data/POSGRADdata_merge_analytic.csv")
#Read in data
POSGRADanalytic<-read.csv(POSGRADanalyticlocation,header = TRUE)
#Examine Allele Frequencies by SNP
library(ggplot2)
library(knitr)
library(dplyr)
#rs174602
figure_174602<- ggplot(data=POSGRADanalytic,aes(x=rs174602_o_num))+
geom_bar(aes(factor(rs174602_o_num)))+
scale_x_discrete(name="SNP rs174602", labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))+
ggtitle("FADS 2 SNP rs174602 Allele Frequency ")
saveRDS(figure_174602,here::here("output/figure_174602.rds"))
#rs1535
figure_1535<- ggplot(data=POSGRADanalytic,aes(x=rs1535_o_num))+
geom_bar(aes(factor(rs1535_o_num)))+
scale_x_discrete(name="SNP rs1535", labels=c("0"="Homozygote Major","1"= "Heterozygote Major","2"="Homozygote Minor"))+
ggtitle("FADS 2 SNP rs1535 Allele Frequency ")
saveRDS(figure_1535,here::here("output/figure_1535.rds"))
```{r}
#Set filepaths
POSGRADanalyticlocation<-here::here("derived_data/POSGRADdata_merge_analytic.csv")
#Read in data
POSGRADanalytic<-read.csv(POSGRADanalyticlocation,header = TRUE)
#Read in data
POSGRADanalytic<-read.csv(POSGRADanalyticlocation,header = TRUE)
```{r}
library(ggplot2)
library(dplyr)
library(knitr)
#Composite (Verbal, Perceptive, Quantitative)
figure_composite<- ggplot(POSGRADanalytic,aes(x=VPC))+
geom_histogram(bins=50, fill="#69b3a2", color="#69b3a2")+
ggtitle("Distribution of McCarthy Composite Scores")+
xlab("McCarthy Composite Score")
saveRDS(figure_composite,here::here("output/figure_composite.rds"))
saveRDS(figure_composite,here::here("output/figure_composite.rds"))
saveRDS(figure_composite,here::here("output/figure_composite.rds"))
#Set filepaths
POSGRADanalyticlocation<-here::here("derived_data/POSGRADdata_merge_analytic.csv")
#Read in data
POSGRADanalytic<-read.csv(POSGRADanalyticlocation,header = TRUE)
library(ggplot2)
library(dplyr)
library(knitr)
#Composite (Verbal, Perceptive, Quantitative)
figure_composite<- ggplot(POSGRADanalytic,aes(x=VPC))+
geom_histogram(bins=50, fill="#69b3a2", color="#69b3a2")+
ggtitle("Distribution of McCarthy Composite Scores")+
xlab("McCarthy Composite Score")
saveRDS(figure_composite,here::here("output/figure_composite.rds"))
library(dplyr)
library(ggplot2)
#Setting filepaths
offspringfadslocation<-here::here("raw_data/posgrad_offspring_cleaned_genetic_data.csv")
cognitivelocation<-here::here("raw_data/ja.csv")
breastfeedinglocation<-here::here("raw_data/breastfeeding.csv")
SESHomelocation<-here::here("raw_data/Ses_home.csv")
#Reading in data
offspringfadsdata<-read.csv(offspringfadslocation,header = TRUE)
cognitivedata<-read.csv(cognitivelocation,header=TRUE)
breastfeedingdata<-read.csv(breastfeedinglocation, header=TRUE)
SESHOMEdata<-read.csv(SESHomelocation,header=TRUE)
#Checking variable types
class(offspringfadsdata$folio)
class(cognitivedata$folio)
class(breastfeedingdata$foliof)
class(SESHOMEdata$folio_mom)
#Change folio to integer in offspringfadsdata and check
offspringfadsdata$folio<- as.integer(as.character(offspringfadsdata$folio))
#Change folio to integer in offspringfadsdata and check
offspringfadsdata$folio<- as.integer(as.character(offspringfadsdata$folio))
class(offspringfadsdata$folio)
#Change folio to integer in offspringfadsdata and check
offspringfadsdata$folio<- as.integer(as.character(offspringfadsdata$folio))
class(offspringfadsdata$folio)
#Checking variable types
class(offspringfadsdata$folio)
library(dplyr)
library(ggplot2)
#Setting filepaths
offspringfadslocation<-here::here("raw_data/posgrad_offspring_cleaned_genetic_data.csv")
cognitivelocation<-here::here("raw_data/ja.csv")
breastfeedinglocation<-here::here("raw_data/breastfeeding.csv")
SESHomelocation<-here::here("raw_data/Ses_home.csv")
#Reading in data
offspringfadsdata<-read.csv(offspringfadslocation,header = TRUE)
cognitivedata<-read.csv(cognitivelocation,header=TRUE)
breastfeedingdata<-read.csv(breastfeedinglocation, header=TRUE)
SESHOMEdata<-read.csv(SESHomelocation,header=TRUE)
#Checking variable types
class(offspringfadsdata$folio)
class(cognitivedata$folio)
class(breastfeedingdata$foliof)
class(SESHOMEdata$folio_mom)
#Change folio to integer in offspringfadsdata and check
offspringfadsdata$folio<- as.integer(as.character(offspringfadsdata$folio))
View(offspringfadsdata)
View(offspringfadsdata)
library(dplyr)
library(ggplot2)
#Setting filepaths
offspringfadslocation<-here::here("raw_data/posgrad_offspring_cleaned_genetic_data.csv")
cognitivelocation<-here::here("raw_data/ja.csv")
breastfeedinglocation<-here::here("raw_data/breastfeeding.csv")
SESHomelocation<-here::here("raw_data/Ses_home.csv")
#Reading in data
offspringfadsdata<-read.csv(offspringfadslocation,header = TRUE)
cognitivedata<-read.csv(cognitivelocation,header=TRUE)
breastfeedingdata<-read.csv(breastfeedinglocation, header=TRUE)
SESHOMEdata<-read.csv(SESHomelocation,header=TRUE)
#Checking variable types
class(offspringfadsdata$folio)
class(cognitivedata$folio)
class(breastfeedingdata$foliof)
class(SESHOMEdata$folio_mom)
#Change folio to integer in offspringfadsdata and check
offspringfadsdata$folio<- as.integer(as.character(offspringfadsdata$folio))
class(offspringfadsdata$folio)
#Merge data
builddata1<- merge(cognitivedata,offspringfadsdata,by = "folio", all.x = TRUE)
builddata2<-merge(builddata1,breastfeedingdata, by.x = "folio", by.y = "foliof", all.x = TRUE)
builddata3 <-merge(builddata2,SESHOMEdata, by.x = "folior", by.y = "folio_mom", all.x = TRUE)
POSGRADdata_merge<-builddata3
#Create analytic sample
POSGRADdata_merge$analytic= ifelse(POSGRADdata_merge$VPC>=0 & POSGRADdata_merge$rs174602_o_num>=0,1,0)
#We have genetic data for 621 children
table(POSGRADdata_merge$rs174602_o_num>=0)
#Of those 621, 125 are missing VPC score data (621-496), but I do not know how to cross check
POSGRADdata_merge$havers174602=ifelse(POSGRADdata_merge$rs174602_o_num>=0,1,0)
POSGRADdata_merge$haveVPC=ifelse(POSGRADdata_merge$VPC>=0,1,0)
#Missing sample has 195, not quite right
missingsample <- subset(POSGRADdata_merge, is.na(POSGRADdata_merge$rs174602_o_num) & is.na(POSGRADdata_merge$VPC))
#Analytic data only
POSGRADdata_merge_analytic<-subset(POSGRADdata_merge, analytic==1)
#Save POSGRAD Merged data as CSV
write.csv(POSGRADdata_merge,file=here::here("derived_data/POSGRADdata_merge.csv"))
#Save POSGRAD Analytic data as CSV
write.csv(POSGRADdata_merge_analytic,file=here::here("derived_data/POSGRADdata_merge_analytic.csv"))
